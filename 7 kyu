Solutions to problems in C#

//Array element parity
/*In this Kata, you will be given an array of integers whose elements have
 both a negative and a positive value, except for one integer that is 
either only negative or only positive. Your task will be to find that 
integer.*/

using System;
using System.Collections.Generic;
using System.Linq;

public static class Kata
{
  public static int Solve(List<int> list)
  {
      int unique = arr.Distinct().Sum();
      return unique;
  }
}
//Form The Largest 
using System;
using System.Collections.Generic;

class Kata
{
        public static int MaxNumber(int n)
        {
            List<int> numbers = new List<int>();
            while (n > 0)
            {
                int digit = n % 10;
                n /= 10;
                numbers.Add(digit);
            }
            numbers.Sort();
            numbers.Reverse();

            int total = 0;
            foreach (int entry in numbers)
            {
                total = 10 * total + entry;
            }
            return total;

        }
}

//Largest Elements 
using System.Collections.Generic;

public class Kata
{
  public static List<int> Largest(int n, List<int> xs)
  {
        List<int> copy = new List<int>();
        xs.Sort();
        xs.Reverse();

        for(int i = 0; i <= n-1; i++)
        {
            copy.Add(xs[i]);
        }
        copy.Reverse();
        return copy;
  }
}

//Odd or Even?
public class Kata
{
  public static string OddOrEven(int[] array)
  {
       int sum = 0;
       for (int i = 0; i < array.Length; i++) {
           sum += array[i];
       }
       if (sum == 0 || sum % 2 == 0) {
         return "even";
       }
       return "odd";
  }
}

//Even or Odd - Which is Greater?
using System.Collections.Generic;
using System;
using System.Linq;

public class EvenOrOddKata
{
  public static string EvenOrOdd(string str)
  {
            int sumEven = 0;
            int sumOdd = 0;
            List<int> digits = str.Select(c => c - '0').ToList();
            for (int i = 0; i < digits.Count; i++)
            {
                if (digits[i] % 2 == 0)
                {
                    sumEven += digits[i];
                }
                else
                {
                    sumOdd += digits[i];
                }
            }
            if (sumEven > sumOdd)
            {
                return "Even is greater than Odd";
            }
            else if (sumEven == sumOdd)
            {
                return "Even and Odd are the same";
            } 
            return "Odd is greater than Even";
    
  }
}

2 minutes ago
